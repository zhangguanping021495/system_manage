{"remainingRequest":"D:\\项目\\manage-system\\node_modules\\thread-loader\\dist\\cjs.js!D:\\项目\\manage-system\\node_modules\\babel-loader\\lib\\index.js!D:\\项目\\manage-system\\src\\mock\\user.js","dependencies":[{"path":"D:\\项目\\manage-system\\src\\mock\\user.js","mtime":1615105222819},{"path":"D:\\项目\\manage-system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\项目\\manage-system\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\项目\\manage-system\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcucmVwbGFjZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWx0ZXIuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmNsdWRlcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pbmNsdWRlcy5qcyI7CmltcG9ydCBNb2NrIGZyb20gJ21vY2tqcyc7IC8v5byV5YWlbW9ja2pz5o+S5Lu2Ci8vIGdldOivt+axguS7jmNvbmZpZy51cmzojrflj5blj4LmlbDvvIxwb3N05LuOY29uZmlnLmJvZHnkuK3ojrflj5blj4LmlbAKCmZ1bmN0aW9uIHBhcmFtMk9iaih1cmwpIHsKICB2YXIgc2VhcmNoID0gdXJsLnNwbGl0KCc/JylbMV07CgogIGlmICghc2VhcmNoKSB7CiAgICByZXR1cm4ge307CiAgfQogIC8qIOWwhuS4gOS4qiBKU09O5a2X56ym5Liy6L2s5o2i5Li65a+56LGh44CCKi8KCgogIHJldHVybiBKU09OLnBhcnNlKCd7IicgKyBkZWNvZGVVUklDb21wb25lbnQoc2VhcmNoKS5yZXBsYWNlKC8iL2csICdcXCInKS5yZXBsYWNlKC8mL2csICciLCInKS5yZXBsYWNlKC89L2csICciOiInKSArICcifScpOwp9Cgp2YXIgTGlzdCA9IFtdOwp2YXIgY291bnQgPSAyMDA7Cgpmb3IgKHZhciBpID0gMDsgaSA8IGNvdW50OyBpKyspIHsKICAvL+aooeaLn+eUqOaIt+aVsOaNrgogIExpc3QucHVzaChNb2NrLm1vY2soewogICAgaWQ6IE1vY2suUmFuZG9tLmd1aWQoKSwKICAgIG5hbWU6IE1vY2suUmFuZG9tLmNuYW1lKCksCiAgICBhZGRyOiBNb2NrLm1vY2soJ0Bjb3VudHkodHJ1ZSknKSwKICAgICdhZ2V8MTgtNjAnOiAxLAogICAgYmlydGg6IE1vY2suUmFuZG9tLmRhdGUoKSwKICAgIHNleDogTW9jay5SYW5kb20uaW50ZWdlcigwLCAxKQogIH0pKTsKfQoKZXhwb3J0IGRlZmF1bHQgewogIC8qKg0KICAgKiDojrflj5bliJfooagNCiAgICog6KaB5bim5Y+C5pWwIG5hbWUsIHBhZ2UsIGxpbXQ7IG5hbWXlj6/ku6XkuI3loassIHBhZ2UsbGltaXTmnInpu5jorqTlgLzjgIINCiAgICogQHBhcmFtIG5hbWUsIHBhZ2UsIGxpbWl0DQogICAqIEByZXR1cm4ge3tjb2RlOiBudW1iZXIsIGNvdW50OiBudW1iZXIsIGRhdGE6ICpbXX19DQogICAqLwogIGdldFVzZXJMaXN0OiBmdW5jdGlvbiBnZXRVc2VyTGlzdChjb25maWcpIHsKICAgIHZhciBfcGFyYW0yT2JqID0gcGFyYW0yT2JqKGNvbmZpZy51cmwpLAogICAgICAgIG5hbWUgPSBfcGFyYW0yT2JqLm5hbWUsCiAgICAgICAgX3BhcmFtMk9iaiRwYWdlID0gX3BhcmFtMk9iai5wYWdlLAogICAgICAgIHBhZ2UgPSBfcGFyYW0yT2JqJHBhZ2UgPT09IHZvaWQgMCA/IDEgOiBfcGFyYW0yT2JqJHBhZ2UsCiAgICAgICAgX3BhcmFtMk9iaiRsaW1pdCA9IF9wYXJhbTJPYmoubGltaXQsCiAgICAgICAgbGltaXQgPSBfcGFyYW0yT2JqJGxpbWl0ID09PSB2b2lkIDAgPyAxMCA6IF9wYXJhbTJPYmokbGltaXQ7CgogICAgY29uc29sZS5sb2coJ25hbWU6JyArIG5hbWUsICdwYWdlOicgKyBwYWdlLCAn5YiG6aG15aSn5bCPbGltaXQ6JyArIGxpbWl0KTsKICAgIHZhciBtb2NrTGlzdCA9IExpc3QuZmlsdGVyKGZ1bmN0aW9uICh1c2VyKSB7CiAgICAgIGlmIChuYW1lICYmIHVzZXIubmFtZS5pbmRleE9mKG5hbWUpID09PSAtMSkgcmV0dXJuIGZhbHNlOwogICAgICByZXR1cm4gdHJ1ZTsKICAgIH0pOwogICAgdmFyIHBhZ2VMaXN0ID0gbW9ja0xpc3QuZmlsdGVyKGZ1bmN0aW9uIChpdGVtLCBpbmRleCkgewogICAgICByZXR1cm4gaW5kZXggPCBsaW1pdCAqIHBhZ2UgJiYgaW5kZXggPj0gbGltaXQgKiAocGFnZSAtIDEpOwogICAgfSk7CiAgICByZXR1cm4gewogICAgICBjb2RlOiAyMDAwMCwKICAgICAgY291bnQ6IG1vY2tMaXN0Lmxlbmd0aCwKICAgICAgbGlzdDogcGFnZUxpc3QKICAgIH07CiAgfSwKCiAgLyoqDQogICAqIOWinuWKoOeUqOaItw0KICAgKiBAcGFyYW0gbmFtZSwgYWRkciwgYWdlLCBiaXJ0aCwgc2V4DQogICAqIEByZXR1cm4ge3tjb2RlOiBudW1iZXIsIGRhdGE6IHttZXNzYWdlOiBzdHJpbmd9fX0NCiAgICovCiAgY3JlYXRlVXNlcjogZnVuY3Rpb24gY3JlYXRlVXNlcihjb25maWcpIHsKICAgIHZhciBfSlNPTiRwYXJzZSA9IEpTT04ucGFyc2UoY29uZmlnLmJvZHkpLAogICAgICAgIG5hbWUgPSBfSlNPTiRwYXJzZS5uYW1lLAogICAgICAgIGFkZHIgPSBfSlNPTiRwYXJzZS5hZGRyLAogICAgICAgIGFnZSA9IF9KU09OJHBhcnNlLmFnZSwKICAgICAgICBiaXJ0aCA9IF9KU09OJHBhcnNlLmJpcnRoLAogICAgICAgIHNleCA9IF9KU09OJHBhcnNlLnNleDsKCiAgICBjb25zb2xlLmxvZyhKU09OLnBhcnNlKGNvbmZpZy5ib2R5KSk7CiAgICBMaXN0LnVuc2hpZnQoewogICAgICBpZDogTW9jay5SYW5kb20uZ3VpZCgpLAogICAgICBuYW1lOiBuYW1lLAogICAgICBhZGRyOiBhZGRyLAogICAgICBhZ2U6IGFnZSwKICAgICAgYmlydGg6IGJpcnRoLAogICAgICBzZXg6IHNleAogICAgfSk7CiAgICByZXR1cm4gewogICAgICBjb2RlOiAyMDAwMCwKICAgICAgZGF0YTogewogICAgICAgIG1lc3NhZ2U6ICfmt7vliqDmiJDlip8nCiAgICAgIH0KICAgIH07CiAgfSwKCiAgLyoqDQogICAqIOWIoOmZpOeUqOaItw0KICAgKiBAcGFyYW0gaWQNCiAgICogQHJldHVybiB7Kn0NCiAgICovCiAgZGVsZXRlVXNlcjogZnVuY3Rpb24gZGVsZXRlVXNlcihjb25maWcpIHsKICAgIHZhciBfcGFyYW0yT2JqMiA9IHBhcmFtMk9iaihjb25maWcudXJsKSwKICAgICAgICBpZCA9IF9wYXJhbTJPYmoyLmlkOwoKICAgIGlmICghaWQpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICBjb2RlOiAtOTk5LAogICAgICAgIG1lc3NhZ2U6ICflj4LmlbDkuI3mraPnoa4nCiAgICAgIH07CiAgICB9IGVsc2UgewogICAgICBMaXN0ID0gTGlzdC5maWx0ZXIoZnVuY3Rpb24gKHUpIHsKICAgICAgICByZXR1cm4gdS5pZCAhPT0gaWQ7CiAgICAgIH0pOwogICAgICByZXR1cm4gewogICAgICAgIGNvZGU6IDIwMDAwLAogICAgICAgIG1lc3NhZ2U6ICfliKDpmaTmiJDlip8nCiAgICAgIH07CiAgICB9CiAgfSwKCiAgLyoqDQogICAqIOaJuemHj+WIoOmZpA0KICAgKiBAcGFyYW0gY29uZmlnDQogICAqIEByZXR1cm4ge3tjb2RlOiBudW1iZXIsIGRhdGE6IHttZXNzYWdlOiBzdHJpbmd9fX0NCiAgICovCiAgYmF0Y2hyZW1vdmU6IGZ1bmN0aW9uIGJhdGNocmVtb3ZlKGNvbmZpZykgewogICAgdmFyIF9wYXJhbTJPYmozID0gcGFyYW0yT2JqKGNvbmZpZy51cmwpLAogICAgICAgIGlkcyA9IF9wYXJhbTJPYmozLmlkczsKCiAgICBpZHMgPSBpZHMuc3BsaXQoJywnKTsKICAgIExpc3QgPSBMaXN0LmZpbHRlcihmdW5jdGlvbiAodSkgewogICAgICByZXR1cm4gIWlkcy5pbmNsdWRlcyh1LmlkKTsKICAgIH0pOwogICAgcmV0dXJuIHsKICAgICAgY29kZTogMjAwMDAsCiAgICAgIGRhdGE6IHsKICAgICAgICBtZXNzYWdlOiAn5om56YeP5Yig6Zmk5oiQ5YqfJwogICAgICB9CiAgICB9OwogIH0sCgogIC8qKg0KICAgKiDkv67mlLnnlKjmiLcNCiAgICogQHBhcmFtIGlkLCBuYW1lLCBhZGRyLCBhZ2UsIGJpcnRoLCBzZXgNCiAgICogQHJldHVybiB7e2NvZGU6IG51bWJlciwgZGF0YToge21lc3NhZ2U6IHN0cmluZ319fQ0KICAgKi8KICB1cGRhdGVVc2VyOiBmdW5jdGlvbiB1cGRhdGVVc2VyKGNvbmZpZykgewogICAgdmFyIF9KU09OJHBhcnNlMiA9IEpTT04ucGFyc2UoY29uZmlnLmJvZHkpLAogICAgICAgIGlkID0gX0pTT04kcGFyc2UyLmlkLAogICAgICAgIG5hbWUgPSBfSlNPTiRwYXJzZTIubmFtZSwKICAgICAgICBhZGRyID0gX0pTT04kcGFyc2UyLmFkZHIsCiAgICAgICAgYWdlID0gX0pTT04kcGFyc2UyLmFnZSwKICAgICAgICBiaXJ0aCA9IF9KU09OJHBhcnNlMi5iaXJ0aCwKICAgICAgICBzZXggPSBfSlNPTiRwYXJzZTIuc2V4OwoKICAgIHZhciBzZXhfbnVtID0gcGFyc2VJbnQoc2V4KTsKICAgIExpc3Quc29tZShmdW5jdGlvbiAodSkgewogICAgICBpZiAodS5pZCA9PT0gaWQpIHsKICAgICAgICB1Lm5hbWUgPSBuYW1lOwogICAgICAgIHUuYWRkciA9IGFkZHI7CiAgICAgICAgdS5hZ2UgPSBhZ2U7CiAgICAgICAgdS5iaXJ0aCA9IGJpcnRoOwogICAgICAgIHUuc2V4ID0gc2V4X251bTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgfQogICAgfSk7CiAgICByZXR1cm4gewogICAgICBjb2RlOiAyMDAwMCwKICAgICAgZGF0YTogewogICAgICAgIG1lc3NhZ2U6ICfnvJbovpHmiJDlip8nCiAgICAgIH0KICAgIH07CiAgfQp9Ow=="},{"version":3,"sources":["D:/项目/manage-system/src/mock/user.js"],"names":["Mock","param2Obj","url","search","split","JSON","parse","decodeURIComponent","replace","List","count","i","push","mock","id","Random","guid","name","cname","addr","birth","date","sex","integer","getUserList","config","page","limit","console","log","mockList","filter","user","indexOf","pageList","item","index","code","length","list","createUser","body","age","unshift","data","message","deleteUser","u","batchremove","ids","includes","updateUser","sex_num","parseInt","some"],"mappings":"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","sourcesContent":["import Mock from 'mockjs'//引入mockjs插件\r\n// get请求从config.url获取参数，post从config.body中获取参数\r\nfunction param2Obj(url) {\r\n  const search = url.split('?')[1]\r\n  if (!search) {\r\n    return {}\r\n  }\r\n  /* 将一个 JSON字符串转换为对象。*/\r\n  return JSON.parse(\r\n    '{\"' +\r\n      decodeURIComponent(search)\r\n        .replace(/\"/g, '\\\\\"')\r\n        .replace(/&/g, '\",\"')\r\n        .replace(/=/g, '\":\"') +\r\n      '\"}'\r\n  )\r\n}\r\n\r\nlet List = []\r\nconst count = 200\r\nfor (let i = 0; i < count; i++) {//模拟用户数据\r\n  List.push(\r\n    Mock.mock({\r\n      id: Mock.Random.guid(),\r\n      name: Mock.Random.cname(),\r\n      addr: Mock.mock('@county(true)'),\r\n      'age|18-60': 1,\r\n      birth: Mock.Random.date(),\r\n      sex: Mock.Random.integer(0, 1)\r\n    })\r\n  )\r\n}\r\n\r\nexport default{\r\n  /**\r\n   * 获取列表\r\n   * 要带参数 name, page, limt; name可以不填, page,limit有默认值。\r\n   * @param name, page, limit\r\n   * @return {{code: number, count: number, data: *[]}}\r\n   */\r\n  getUserList: config => { \r\n    const { name, page = 1, limit = 10 } = param2Obj(config.url)\r\n    console.log('name:' + name, 'page:' + page, '分页大小limit:' + limit)\r\n    const mockList = List.filter(user => {\r\n      if (name && user.name.indexOf(name) === -1) return false\r\n      return true\r\n    })\r\n    const pageList = mockList.filter((item, index) => index < limit * page && index >= limit * (page - 1))\r\n    return {\r\n      code: 20000,\r\n      count: mockList.length,\r\n      list: pageList\r\n    }\r\n  },\r\n  /**\r\n   * 增加用户\r\n   * @param name, addr, age, birth, sex\r\n   * @return {{code: number, data: {message: string}}}\r\n   */\r\n  createUser: config => {\r\n    const { name, addr, age, birth, sex } = JSON.parse(config.body)\r\n    console.log(JSON.parse(config.body))\r\n    List.unshift({\r\n      id: Mock.Random.guid(),\r\n      name: name,\r\n      addr: addr,\r\n      age: age,\r\n      birth: birth,\r\n      sex: sex\r\n    })\r\n    return {\r\n      code: 20000,\r\n      data: {\r\n        message: '添加成功'\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * 删除用户\r\n   * @param id\r\n   * @return {*}\r\n   */\r\n  deleteUser: config => {\r\n    const { id } = param2Obj(config.url)\r\n    if (!id) {\r\n      return {\r\n        code: -999,\r\n        message: '参数不正确'\r\n      }\r\n    } else {\r\n      List = List.filter(u => u.id !== id)\r\n      return {\r\n        code: 20000,\r\n        message: '删除成功'\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * 批量删除\r\n   * @param config\r\n   * @return {{code: number, data: {message: string}}}\r\n   */\r\n  batchremove: config => {\r\n    let { ids } = param2Obj(config.url)\r\n    ids = ids.split(',')\r\n    List = List.filter(u => !ids.includes(u.id))\r\n    return {\r\n      code: 20000,\r\n      data: {\r\n        message: '批量删除成功'\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * 修改用户\r\n   * @param id, name, addr, age, birth, sex\r\n   * @return {{code: number, data: {message: string}}}\r\n   */\r\n  updateUser: config => {\r\n    const { id, name, addr, age, birth, sex } = JSON.parse(config.body)\r\n    const sex_num = parseInt(sex)\r\n    List.some(u => {\r\n      if (u.id === id) {\r\n        u.name = name\r\n        u.addr = addr\r\n        u.age = age\r\n        u.birth = birth\r\n        u.sex = sex_num\r\n        return true\r\n      }\r\n    })\r\n    return {\r\n      code: 20000,\r\n      data: {\r\n        message: '编辑成功'\r\n      }\r\n    }\r\n  }\r\n}"]}]}